#!/usr/bin/env python

from mail.test import *
from qwer import *
from untwisted import rfc5321, smtp, tcp

expect(3)

@sdfg
def _():
  listen = tcp.listen(1438)

  #@listen().then
  @untwisted.identity(listen().then)
  class server(smtp.server):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.server.mail):
        sender = staticmethod(untwisted.each(lambda: (yield equal('alice@example.com', str((yield))))))
        recipient = staticmethod(untwisted.each(lambda: (yield equal('bob@example.com', str((yield))))))

        @staticmethod
        @untwisted.each
        def content():
          content = yield

          yield ok(qwer(rfc5321.timeStampLine, '\r\n'.join(('From: notAlice@example\.com',
            '',
            'Expect'))).match(content), content)

      ctx = yield sample.__get__(ctx)()

      # QUIT
      yield smtp.server.mail.__get__(ctx)()

  @untwisted.call
  @promise.resume
  def _():
    while True:
      ok(False, (yield listen()))

  connect = tcp.connect('localhost', 'smtp')

  #@connect().then
  @untwisted.identity(connect().then)
  class client(smtp.client):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.client.mail):
        sender = iter(('alice@example.com',)).next
        recipient = iter(('bob@example.com',)).next
        content = iter(('\r\n'.join(('From: notAlice@example.com',
          '',
          'Expect')),)).next

      yield sample.__get__(ctx)()

  return server
