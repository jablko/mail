#!/usr/bin/env python

import socket
from mail.test import *
from qwer import *
from untwisted import rfc5321, smtp, tcp

expect(7)

# Cache our domain
domain = socket.getfqdn()

@sdfg
def _():
  listen = tcp.listen(1438)

  #@...
  @untwisted.identity(listen().then)
  @promise.resume
  def server(transport):
    transport.write('220\r\n')

    equal('EHLO {}\r\n'.format(domain), (yield transport.protocol.dataReceived.shift()))

    transport.write('250-example.com Success\r\n250 XFORWARD NAME ADDR PROTO HELO SOURCE PORT IDENT\r\n')

    ok(qwer('XFORWARD NAME=localhost ADDR=127\.0\.0\.1 PORT=\d+ HELO=example\.com IDENT=\[UNAVAILABLE] PROTO=ESMTP SOURCE=LOCAL\r\n').match((yield transport.protocol.dataReceived.shift())))

    transport.write('250\r\n')

    equal('MAIL FROM:<alice@example.com>\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('RCPT TO:<bob@example.com>\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('DATA\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('354\r\n')

    ok(qwer(rfc5321.timeStampLine, '\r\n'.join((
      'From: notAlice@example\.com',
      '',
      'Expect'))).match((yield transport.protocol.dataReceived.shift())))

    transport.write('250\r\n')

    # QUIT command not issued to content filter?
    ok(True, (yield transport.protocol.connectionLost))

  @untwisted.call
  @promise.resume
  def _():
    while True:
      ok(False, (yield listen()))

  connect = tcp.connect('localhost', 'smtp')

  smtp.domain = 'example.com'

  #@...
  @untwisted.identity(connect().then)
  class client(smtp.client):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.client.mail):
        sender = iter(('alice@example.com',)).next
        recipient = iter(('bob@example.com',)).next
        content = iter(('\r\n'.join((
          'From: notAlice@example.com',
          '',
          'Expect')),)).next

      yield sample.__get__(ctx)()

  return server
