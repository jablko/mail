#!/usr/bin/env python

import socket
from mail.test import *
from qwer import *
from untwisted import rfc5321, smtp, tcp

expect(6)

# Cache our domain
domain = socket.getfqdn()

@sdfg
def _():
  listen = tcp.listen(24)

  #@...
  @untwisted.identity(listen().then)
  @promise.resume
  def server(transport):
    transport.write('220\r\n')

    equal('LHLO {}\r\n'.format(domain), (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('MAIL FROM:<test@example.com>\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('RCPT TO:<nottheoilrig>\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('250\r\n')

    equal('DATA\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('354\r\n')

    ok(qwer(rfc5321.timeStampLine, rfc5321.timeStampLine, '\r\n'.join((
      'Date: Fri, 13 Feb 2009 15:31:30 -0800 \(PST\)',
      'From: notTest@example\.com',
      'Message-ID: 1234567890@example\.com',
      '',
      'Expect'))).match((yield transport.protocol.dataReceived.shift())))

    transport.write('250\r\n')

    equal('QUIT\r\n', (yield transport.protocol.dataReceived.shift()))

    transport.write('221\r\n')

  @untwisted.call
  @promise.resume
  def _():
    while True:
      ok(False, (yield listen()))

  connect = tcp.connect('localhost', 'smtp')

  #@...
  @untwisted.identity(connect().then)
  class client(smtp.client):

    @untwisted.each
    def mail():
      ctx = yield

      class sample(smtp.client.mail):
        sender = iter(('test@example.com',)).next
        recipient = iter(('test@nottheoilrig.com',)).next
        content = iter(('\r\n'.join((
          'Date: Fri, 13 Feb 2009 15:31:30 -0800 (PST)',
          'From: notTest@example.com',
          'Message-ID: 1234567890@example.com',
          '',
          'Expect')),)).next

      yield sample.__get__(ctx)()

  return server
